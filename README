Requirements
    - gphoto2
    - ptpcam (part of chdk)
    - python-flickr
    - imagemagick
    - python-pythonmagick

defaults:
    archivedir: ~/myphotobooth
    numpics: 4
    useFlickr: False

To override defaults create /etc/myphotobooth.conf
[myphotobooth]
archivedir: /home/detiber/firstbirthday
numpics: 4
useFlickr: True
flickr_api_key: XXXXXXXX
flickr_api_secret: XXXXXX
flickr_set: myphotobooth
email_from: me@mine.com
email_subject: My Subject
email_body: /path/to/my/emailbody.txt
email_server: hostname.for.my.email.server.com
template_file: /home/detiber/photoboothtemplate.jpg

Current TODO
============
- Add error checking to create popup if something goes awry
- If no picture is available, display something that shows loading, etc so that we don't show a broken image
- Figure out way to deselect the go button after run is complete (think the best thing is to go ahead and open up the picture viewer with the default page showing a please wait page)
- Create photostrip
    - merge pictures with template
    - Display photostrip until ready for next shoot
- archive photostrip
- Make sure email task also includes links to flickr photos
- email pictures and photostrip to user if emailAddress entered
    - http://docs.python.org/library/email-examples.html 
- Currently when the app is closed, the child(daemon processes) are killed, find a way to either keep them alive or to keep the app from closing until they have finished.
- Fix camera script to test doing things before doing them (like test if lens open before opening)

Future TODO
===========
- Cleanup config class and make more pythonic
- Add to config file parsing
    - flickr bool (Fix)
    - email from address
    - email relay info
    - banner graphic
    - photostrip template
    - how long to display each image
- fix config file parsing to gracefully handle missing values
- possibly set to show picture shortly after taking, rinse and repeat until number of photos wanted for strip is taken, instead of firing pictures in succession
- would be great to have a live view of the cam, or at least the review type picture from camera instead of having to wait for download
- Fix camera hangs (maybe requiring migrating from ptpcam to chdkptp)
- Config file option for flickr visibility (currently forces is_public)
- GUI for flickr api approval
    - currently command line based
    - popup is defined in myphotobooth.glade
    - should move ConfigFile parsing to MyPhotoBoothApp class (That way FlickrUploader is initiated after the gtk builder is created)
- Better Error Checking/handling
    - flickr api
    - others
- Logging
    - switch to a logging module, (default python logging is broken with python-flickrapi)
    - add log based logging
- Add support for other tetherable cameras
- Add support for other photosharing sites
- Code cleanup
    - break up into modules
    - Fix ugly hacks 
    - Better checking around config file parsing
    - refactor so that actions like email, flickr are using a plugin type architecture
- Package
    - Script to create RPM/Deb package
- Makefile
    - targets for installing, cleaning, packaging
- submit to fedora repo
    - may need to package ptpcam as a prerequisite
